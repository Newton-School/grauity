"use strict";(self.webpackChunk_newtonschool_grauity=self.webpackChunk_newtonschool_grauity||[]).push([[2297],{"./stories/elements/Form/FormRow/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ExampleForm:()=>ExampleForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),ui_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/core/index.ts"),ui_elements_Typography__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/elements/Typography/index.ts"),ui_index__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/index.ts"),_decorators_withRemovePadding__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/decorators/withRemovePadding.tsx");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _toConsumableArray(r){return function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}(r)||function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||_unsupportedIterableToArray(r)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||_unsupportedIterableToArray(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}const __WEBPACK_DEFAULT_EXPORT__={title:"Elements/Form/FormRow",component:ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,decorators:[_decorators_withRemovePadding__WEBPACK_IMPORTED_MODULE_4__.A]};var PIZZA_TOPPINGS=[{label:"Pepperoni",value:"pepperoni"},{label:"Mushroom",value:"mushroom"},{label:"Onion",value:"onion"}],ACCOUNT_TYPES=[{label:"Personal",value:"personal"},{label:"Business",value:"business"},{label:"Enterprise",value:"enterprise"}],ExampleForm=function Template(){var _React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_0__.useState({first_name:"",middle_name:"",last_name:"",phone:"",email:"",description:"",account_type:"",otp:"",pizza_toppings:[]}),2),formData=_React$useState2[0],setFormData=_React$useState2[1],_React$useState4=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_0__.useState("brand"),2),color=_React$useState4[0],setColor=_React$useState4[1],handleChange=function handleChange(event){var value,field=event.target.name;value="pizza_toppings"===field?event.target.checked?[].concat(_toConsumableArray(formData[field]),[event.target.value]):formData[field].filter((function(item){return item!==event.target.value})):event.target.value,setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},field,value)))},isMobileView=window.innerWidth<600;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",gap:"12px",padding:"12px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{maxWidth:"800px",gap:"20px",display:"flex",flexDirection:"column"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,{column:isMobileView},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.N9,{name:"first_name",label:"First Name",value:formData.first_name,onChange:handleChange,isRequired:!0,placeholder:"Enter your first name",color}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.N9,{name:"middle_name",label:"Middle Name",value:formData.middle_name,onChange:handleChange,placeholder:"Enter your middle name",color}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.N9,{name:"last_name",label:"Last Name",value:formData.last_name,onChange:handleChange,isRequired:!0,placeholder:"Enter your last name",color})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,{widths:"1fr 2fr",column:isMobileView},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.N9,{name:"email",label:"Email",value:formData.email,onChange:handleChange,isRequired:!0,adornments:{end:"@gmail.com"},placeholder:"Enter your email",color}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.N9,{name:"phone",label:"Phone",value:formData.phone,onChange:handleChange,isRequired:!0,adornments:{start:"+91"},placeholder:"Enter your phone",color})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,{column:isMobileView},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.mW,{name:"description",label:"Description",value:formData.description,onChange:handleChange,placeholder:"Enter description...",rows:4,color})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,{column:isMobileView},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.NC,{length:4,name:"otp",style:{width:"100%"},onChange:handleChange,label:"Enter OTP",isOtpCorrect:!1,isOtpWrong:!1,isDisabled:!1,errorMessage:"Wrong otp. Please try again",successMessage:"Correct Otp",color})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,{column:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.sJ,{name:"account_type",color:"brand"===color?"secondary":color},"Account Type"),ACCOUNT_TYPES.map((function(accountType){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.FY,{name:"account_type",value:accountType.value,label:accountType.label,checked:formData.account_type===accountType.value,onChange:handleChange,color})}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,{column:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.sJ,{name:"pizza_toppings",color:"brand"===color?"secondary":color},"Pizza Toppings"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.zq,{name:"pizza_toppings",label:"Select All",isChecked:formData.pizza_toppings.length===PIZZA_TOPPINGS.length,isIndeterminate:formData.pizza_toppings.length>0&&formData.pizza_toppings.length<PIZZA_TOPPINGS.length,onChange:function onChange(e){e.target.checked?setFormData(_objectSpread(_objectSpread({},formData),{},{pizza_toppings:PIZZA_TOPPINGS.map((function(topping){return topping.value}))})):setFormData(_objectSpread(_objectSpread({},formData),{},{pizza_toppings:[]}))},value:"__all__",color}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,null,PIZZA_TOPPINGS.map((function(pizzaTopping){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.zq,{name:"pizza_toppings",label:pizzaTopping.label,isChecked:formData.pizza_toppings.includes(pizzaTopping.value),onChange:handleChange,value:pizzaTopping.value,color})}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"12px",border:"1px solid #ccc",borderRadius:"4px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.Ip,{column:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.sJ,{name:"form-color"},"Select color"),Object.keys(ui_core__WEBPACK_IMPORTED_MODULE_1__.ei).map((function(key){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_3__.FY,{name:"form-color",value:key.toLowerCase(),label:key.toLowerCase(),checked:color===key.toLowerCase(),onChange:function onChange(e){return setColor(e.target.value)}})}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Typography__WEBPACK_IMPORTED_MODULE_2__.Ay,{variant:"paragraph-md-p1"},"Form State:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Typography__WEBPACK_IMPORTED_MODULE_2__.Ay,{variant:"paragraph-md-p1"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,JSON.stringify(formData,null,2)))))}.bind({});const __namedExportsOrder=["ExampleForm"];ExampleForm.parameters={...ExampleForm.parameters,docs:{...ExampleForm.parameters?.docs,source:{originalSource:'() => {\n  const [formData, setFormData] = React.useState({\n    first_name: \'\',\n    middle_name: \'\',\n    last_name: \'\',\n    phone: \'\',\n    email: \'\',\n    description: \'\',\n    account_type: \'\',\n    otp: \'\',\n    pizza_toppings: []\n  });\n  const [color, setColor] = React.useState<`${ACTION_COLORS}`>(\'brand\');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | any) => {\n    const field = event.target.name as string;\n    let value;\n    if (field === \'pizza_toppings\') {\n      if (event.target.checked) {\n        value = [...formData[field], event.target.value];\n      } else {\n        value = formData[field].filter((item: string) => item !== event.target.value);\n      }\n    } else {\n      value = event.target.value;\n    }\n    setFormData({\n      ...formData,\n      [field]: value\n    });\n  };\n  const isMobileView = window.innerWidth < 600;\n  return <div style={{\n    display: \'flex\',\n    gap: \'12px\',\n    padding: \'12px\'\n  }}>\n            <div style={{\n      maxWidth: \'800px\',\n      gap: \'20px\',\n      display: \'flex\',\n      flexDirection: \'column\'\n    }}>\n                {/* First Name, Middle Name and Last Name */}\n                <NSFormRow column={isMobileView}>\n                    <NSTextField name="first_name" label="First Name" value={formData.first_name} onChange={handleChange} isRequired placeholder="Enter your first name" color={color} />\n                    <NSTextField name="middle_name" label="Middle Name" value={formData.middle_name} onChange={handleChange} placeholder="Enter your middle name" color={color} />\n                    <NSTextField name="last_name" label="Last Name" value={formData.last_name} onChange={handleChange} isRequired placeholder="Enter your last name" color={color} />\n                </NSFormRow>\n\n                {/* Email and Phone row */}\n                <NSFormRow widths="1fr 2fr" column={isMobileView}>\n                    <NSTextField name="email" label="Email" value={formData.email} onChange={handleChange} isRequired adornments={{\n          end: \'@gmail.com\'\n        }} placeholder="Enter your email" color={color} />\n                    <NSTextField name="phone" label="Phone" value={formData.phone} onChange={handleChange} isRequired adornments={{\n          start: \'+91\'\n        }} placeholder="Enter your phone" color={color} />\n                </NSFormRow>\n\n                {/* Description row */}\n                <NSFormRow column={isMobileView}>\n                    <NSTextArea name="description" label="Description" value={formData.description} onChange={handleChange} placeholder="Enter description..." rows={4} color={color} />\n                </NSFormRow>\n\n                <NSFormRow column={isMobileView}>\n                    <NSOtpInput length={4} name="otp" style={{\n          width: \'100%\'\n        }} onChange={handleChange} label="Enter OTP" isOtpCorrect={false} isOtpWrong={false} isDisabled={false} errorMessage="Wrong otp. Please try again" successMessage="Correct Otp" color={color} />\n                </NSFormRow>\n\n                {/* Radio buttons row */}\n                <NSFormRow column>\n                    <NSLabel name="account_type" color={color === \'brand\' ? \'secondary\' : color}>\n                        Account Type\n                    </NSLabel>\n                    {ACCOUNT_TYPES.map(accountType => <NSRadioButton name="account_type" value={accountType.value} label={accountType.label} checked={formData.account_type === accountType.value} onChange={handleChange} color={color} />)}\n                </NSFormRow>\n\n                {/* Pizza toppings row, use nscheckbox */}\n                <NSFormRow column>\n                    <NSLabel name="pizza_toppings" color={color === \'brand\' ? \'secondary\' : color}>\n                        Pizza Toppings\n                    </NSLabel>\n                    <NSCheckbox name="pizza_toppings" label="Select All" isChecked={formData.pizza_toppings.length === PIZZA_TOPPINGS.length} isIndeterminate={formData.pizza_toppings.length > 0 && formData.pizza_toppings.length < PIZZA_TOPPINGS.length} onChange={e => {\n          if (e.target.checked) {\n            setFormData({\n              ...formData,\n              pizza_toppings: PIZZA_TOPPINGS.map(topping => topping.value)\n            });\n          } else {\n            setFormData({\n              ...formData,\n              pizza_toppings: []\n            });\n          }\n        }} value="__all__" color={color} />\n                    <NSFormRow>\n                        {PIZZA_TOPPINGS.map(pizzaTopping => <NSCheckbox name="pizza_toppings" label={pizzaTopping.label} isChecked={formData.pizza_toppings.includes(pizzaTopping.value)} onChange={handleChange} value={pizzaTopping.value} color={color} />)}\n                    </NSFormRow>\n                </NSFormRow>\n            </div>\n            <div style={{\n      padding: \'12px\',\n      border: \'1px solid #ccc\',\n      borderRadius: \'4px\'\n    }}>\n                <NSFormRow column>\n                    <NSLabel name="form-color">Select color</NSLabel>\n                    {Object.keys(ACTION_COLORS).map(key => <NSRadioButton name="form-color" value={key.toLowerCase()} label={key.toLowerCase()} checked={color === key.toLowerCase()} onChange={e => setColor(e.target.value as `${ACTION_COLORS}`)} />)}\n                </NSFormRow>\n                <br />\n                <br />\n                <Typography variant="paragraph-md-p1">Form State:</Typography>\n                <Typography variant="paragraph-md-p1">\n                    <pre>{JSON.stringify(formData, null, 2)}</pre>\n                </Typography>\n            </div>\n        </div>;\n}',...ExampleForm.parameters?.docs?.source}}}},"./stories/decorators/withRemovePadding.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _templateObject,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");var StyledRemovedPaddingContainer=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js").Ay.div(_templateObject||(_templateObject=function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    margin: -1rem;\n"]))),withRemovePadding=function withRemovePadding(Story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(StyledRemovedPaddingContainer,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))};const __WEBPACK_DEFAULT_EXPORT__=withRemovePadding;try{withRemovePadding.displayName="withRemovePadding",withRemovePadding.__docgenInfo={description:"This is a decorator which removes padding from the story.",displayName:"withRemovePadding",props:{storyName:{defaultValue:null,description:"Override the display name in the UI (CSF v2)",name:"storyName",required:!1,type:{name:"string"}},play:{defaultValue:null,description:"Function that is executed after the story is rendered.",name:"play",required:!1,type:{name:"PlayFunction<ReactRenderer, Args>"}},globals:{defaultValue:null,description:"Override the globals values for this story",name:"globals",required:!1,type:{name:"Globals"}},story:{defaultValue:null,description:"@deprecated",name:"story",required:!1,type:{name:'Omit<StoryAnnotations<ReactRenderer, Args, Partial<Args>>, "story">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/decorators/withRemovePadding.tsx#withRemovePadding"]={docgenInfo:withRemovePadding.__docgenInfo,name:"withRemovePadding",path:"stories/decorators/withRemovePadding.tsx#withRemovePadding"})}catch(__react_docgen_typescript_loader_error){}}}]);