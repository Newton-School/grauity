"use strict";(self.webpackChunk_newtonschool_grauity=self.webpackChunk_newtonschool_grauity||[]).push([[277],{"./stories/elements/Icon/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BorderIcon:()=>BorderIcon,CircularIcon:()=>CircularIcon,Default:()=>Default,DisabledIcon:()=>DisabledIcon,FlippedIcon:()=>FlippedIcon,IconsSize:()=>IconsSize,InvertedBorderedIcon:()=>InvertedBorderedIcon,InvertedCircularIcon:()=>InvertedCircularIcon,LoadingIcon:()=>LoadingIcon,NormalIcon:()=>NormalIcon,RotatedIcon:()=>RotatedIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),ui_elements_Icon__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/elements/Icon/index.ts");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const __WEBPACK_DEFAULT_EXPORT__={title:"Elements/Icon",component:ui_elements_Icon__WEBPACK_IMPORTED_MODULE_1__.I,argTypes:{as:{control:{disable:!0}},name:{control:{type:"select"}}}};var Template=function Template(args){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Icon__WEBPACK_IMPORTED_MODULE_1__.I,args)},defaultArgs={name:"sparkle",color:"var(--text-primary)",size:"32"},Default=Template.bind({});Default.args=_objectSpread({},defaultArgs),Default.parameters={docs:{description:{story:"An icon in the default format with color and size."}}};var NormalIcon=Template.bind({});NormalIcon.args=_objectSpread({},defaultArgs),NormalIcon.parameters={docs:{description:{story:"An icon in the default format with color and size."}}};var DisabledIcon=Template.bind({});DisabledIcon.args=_objectSpread(_objectSpread({},defaultArgs),{},{disabled:!0}),DisabledIcon.parameters={docs:{description:{story:"An icon can show if it is in a disabled state."}}};var LoadingIcon=Template.bind({});LoadingIcon.args=_objectSpread(_objectSpread({},defaultArgs),{},{loading:!0}),LoadingIcon.parameters={docs:{description:{story:"An icon can be used as a simple loader directly."}}};var IconsSize=Template.bind({});IconsSize.args=_objectSpread(_objectSpread({},defaultArgs),{},{size:"12"}),IconsSize.parameters={docs:{description:{story:"An icon can vary in size."}}};var FlippedIcon=Template.bind({});FlippedIcon.args=_objectSpread(_objectSpread({},defaultArgs),{},{flipped:"vertically"}),FlippedIcon.parameters={docs:{description:{story:"An icon can be flipped."}}};var RotatedIcon=Template.bind({});RotatedIcon.args=_objectSpread(_objectSpread({},defaultArgs),{},{rotated:"clockwise"}),RotatedIcon.parameters={docs:{description:{story:"An icon can be rotated."}}};var BorderIcon=Template.bind({});BorderIcon.args=_objectSpread(_objectSpread({},defaultArgs),{},{bordered:!0}),BorderIcon.parameters={docs:{description:{story:"An icon can be formatted to appear bordered."}}};var CircularIcon=Template.bind({});CircularIcon.args=_objectSpread(_objectSpread({},defaultArgs),{},{circular:!0}),CircularIcon.parameters={docs:{description:{story:"An icon can be formatted to appear circular."}}};var InvertedBorderedIcon=Template.bind({});InvertedBorderedIcon.args=_objectSpread(_objectSpread({},defaultArgs),{},{bordered:!0,inverted:!0}),InvertedBorderedIcon.parameters={docs:{description:{story:"An icon can have its colors inverted."}}};var InvertedCircularIcon=Template.bind({});InvertedCircularIcon.args=_objectSpread(_objectSpread({},defaultArgs),{},{circular:!0,inverted:!0}),InvertedCircularIcon.parameters={docs:{description:{story:"An icon can have its colors inverted."}}};const __namedExportsOrder=["Default","NormalIcon","DisabledIcon","LoadingIcon","IconsSize","FlippedIcon","RotatedIcon","BorderIcon","CircularIcon","InvertedBorderedIcon","InvertedCircularIcon"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...Default.parameters?.docs?.source}}},NormalIcon.parameters={...NormalIcon.parameters,docs:{...NormalIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...NormalIcon.parameters?.docs?.source}}},DisabledIcon.parameters={...DisabledIcon.parameters,docs:{...DisabledIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...DisabledIcon.parameters?.docs?.source}}},LoadingIcon.parameters={...LoadingIcon.parameters,docs:{...LoadingIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...LoadingIcon.parameters?.docs?.source}}},IconsSize.parameters={...IconsSize.parameters,docs:{...IconsSize.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...IconsSize.parameters?.docs?.source}}},FlippedIcon.parameters={...FlippedIcon.parameters,docs:{...FlippedIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...FlippedIcon.parameters?.docs?.source}}},RotatedIcon.parameters={...RotatedIcon.parameters,docs:{...RotatedIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...RotatedIcon.parameters?.docs?.source}}},BorderIcon.parameters={...BorderIcon.parameters,docs:{...BorderIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...BorderIcon.parameters?.docs?.source}}},CircularIcon.parameters={...CircularIcon.parameters,docs:{...CircularIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...CircularIcon.parameters?.docs?.source}}},InvertedBorderedIcon.parameters={...InvertedBorderedIcon.parameters,docs:{...InvertedBorderedIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...InvertedBorderedIcon.parameters?.docs?.source}}},InvertedCircularIcon.parameters={...InvertedCircularIcon.parameters,docs:{...InvertedCircularIcon.parameters?.docs,source:{originalSource:"args => <Icon {...args} />",...InvertedCircularIcon.parameters?.docs?.source}}}}}]);