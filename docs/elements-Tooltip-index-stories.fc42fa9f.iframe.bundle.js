"use strict";(self.webpackChunk_newtonschool_grauity=self.webpackChunk_newtonschool_grauity||[]).push([[8293],{"./stories/elements/Tooltip/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlExternally:()=>ControlExternally,Default:()=>Default,WithCustomContent:()=>WithCustomContent,WithoutArrow:()=>WithoutArrow,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var TOOLTIP_PLACEMENT=function(TOOLTIP_PLACEMENT){return TOOLTIP_PLACEMENT.TOP="top",TOOLTIP_PLACEMENT.RIGHT="right",TOOLTIP_PLACEMENT.BOTTOM="bottom",TOOLTIP_PLACEMENT.LEFT="left",TOOLTIP_PLACEMENT.TOP_START="top-start",TOOLTIP_PLACEMENT.TOP_END="top-end",TOOLTIP_PLACEMENT.BOTTOM_START="bottom-start",TOOLTIP_PLACEMENT.BOTTOM_END="bottom-end",TOOLTIP_PLACEMENT.LEFT_START="left-start",TOOLTIP_PLACEMENT.LEFT_END="left-end",TOOLTIP_PLACEMENT.RIGHT_START="right-start",TOOLTIP_PLACEMENT.RIGHT_END="right-end",TOOLTIP_PLACEMENT}({}),Tooltip=__webpack_require__("./ui/elements/Tooltip/Tooltip.tsx"),react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./ui/elements/Button/index.ts"),ui=__webpack_require__("./ui/index.ts");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const index_stories={title:"Elements/Tooltip",component:Tooltip.A,argTypes:{placement:{control:{type:"select",options:Object.values(TOOLTIP_PLACEMENT)}},fixedPositioning:{control:"boolean"},hidden:{control:"boolean"},hideArrow:{control:"boolean"}},className:""};var Template=function Template(args){return react.createElement(Tooltip.A,args,react.createElement(Button.Ay,{variant:"primary",color:"brand"},"Hover over me!"))},Default=Template.bind({});Default.args={content:"This is a tooltip",placement:TOOLTIP_PLACEMENT.TOP,fixedPositioning:!1,hidden:!1,hideArrow:!1,config:{tooltip:{maxWidth:"200px",padding:"12px"}}};var WithoutArrow=Template.bind({});WithoutArrow.args=_objectSpread(_objectSpread({},Default.args),{},{content:"This is a tooltip without an arrow",hideArrow:!0});var WithCustomContent=Template.bind({});WithCustomContent.args=_objectSpread(_objectSpread({},Default.args),{},{content:react.createElement("div",null,react.createElement("h3",null,"Custom content"),react.createElement("p",null,"This is custom tooltip content"))});var ControlExternally=function TemplateWithControl(args){var _useState2=_slicedToArray((0,react.useState)(!1),2),isOpen=_useState2[0],setIsOpen=_useState2[1];return react.createElement(ui.bp,null,react.createElement(Tooltip.A,_extends({},args,{isOpen}),react.createElement(Button.Ay,{variant:"primary",color:"brand"},"Hover over me!")),react.createElement(ui.zq,{name:"isOpen",label:"Open Tooltip",isChecked:isOpen,onChange:function onChange(){setIsOpen(!isOpen)}}))}.bind({});ControlExternally.args=_objectSpread(_objectSpread({},Default.args),{},{content:"This is a tooltip is operated by isOpen prop",isOpen:!0});const __namedExportsOrder=["Default","WithoutArrow","WithCustomContent","ControlExternally"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(args: TooltipProps) => <Tooltip {...args}>\n        <Button variant="primary" color="brand">\n            Hover over me!\n        </Button>\n    </Tooltip>',...Default.parameters?.docs?.source}}},WithoutArrow.parameters={...WithoutArrow.parameters,docs:{...WithoutArrow.parameters?.docs,source:{originalSource:'(args: TooltipProps) => <Tooltip {...args}>\n        <Button variant="primary" color="brand">\n            Hover over me!\n        </Button>\n    </Tooltip>',...WithoutArrow.parameters?.docs?.source}}},WithCustomContent.parameters={...WithCustomContent.parameters,docs:{...WithCustomContent.parameters?.docs,source:{originalSource:'(args: TooltipProps) => <Tooltip {...args}>\n        <Button variant="primary" color="brand">\n            Hover over me!\n        </Button>\n    </Tooltip>',...WithCustomContent.parameters?.docs?.source}}},ControlExternally.parameters={...ControlExternally.parameters,docs:{...ControlExternally.parameters?.docs,source:{originalSource:'(args: TooltipProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return <NSButtonGroup>\n            <Tooltip {...args} isOpen={isOpen}>\n                <Button variant="primary" color="brand">\n                    Hover over me!\n                </Button>\n            </Tooltip>\n            <NSCheckbox name="isOpen" label="Open Tooltip" isChecked={isOpen} onChange={() => {\n      setIsOpen(!isOpen);\n    }} />\n        </NSButtonGroup>;\n}',...ControlExternally.parameters?.docs?.source}}}}}]);