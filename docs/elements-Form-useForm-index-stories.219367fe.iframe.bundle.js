"use strict";(self.webpackChunk_newtonschool_grauity=self.webpackChunk_newtonschool_grauity||[]).push([[6124],{"./stories/elements/Form/useForm/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ExampleUseForm:()=>ExampleUseForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/elements/DropdownMenu/index.tsx"),ui_elements_Typography__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/elements/Typography/index.ts"),ui_index__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/index.ts"),yup__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/yup/index.esm.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const __WEBPACK_DEFAULT_EXPORT__={title:"Elements/Form/useForm",component:ui_index__WEBPACK_IMPORTED_MODULE_3__.lk};var ExampleUseForm=function TemplateUseForm(args){var formConfig={fieldNames:["first_name","last_name","hobbies","profession","consent","age","favourite_food"],initialState:{first_name:"",last_name:"",hobbies:[],profession:null,consent:[],age:null,favourite_food:[]},rows:[{widths:"1fr 1fr",items:[{type:ui_index__WEBPACK_IMPORTED_MODULE_3__.wH.TEXTFIELD,rendererProps:{name:"first_name",label:"First Name",placeholder:"John",isRequired:!0}},{type:ui_index__WEBPACK_IMPORTED_MODULE_3__.wH.TEXTFIELD,rendererProps:{name:"last_name",label:"Last Name",placeholder:"Doe",isRequired:!0}}]},{widths:"2fr 1fr",items:[{type:ui_index__WEBPACK_IMPORTED_MODULE_3__.wH.DROPDOWN,rendererProps:{name:"hobbies",label:"Select Hobbies",multiple:!0,isRequired:!0,items:[{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Reading",value:"reading"},{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Writing",value:"writing"},{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Drawing",value:"drawing"}]}},{type:ui_index__WEBPACK_IMPORTED_MODULE_3__.wH.DROPDOWN,rendererProps:{name:"profession",label:"Select Profession",multiple:!1,isRequired:!0,items:[{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Developer",value:"developer"},{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Designer",value:"designer"},{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Manager",value:"manager"},{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Tester",value:"tester"}]}}]},{widths:"1fr",items:[{type:ui_index__WEBPACK_IMPORTED_MODULE_3__.wH.CHECKBOX_GROUP,rendererProps:{name:"consent",isRequired:!0,items:[{label:"I agree to the terms and conditions",value:"true"}]}}]},{widths:"1fr",items:[{type:ui_index__WEBPACK_IMPORTED_MODULE_3__.wH.RADIOBUTTON_GROUP,rendererProps:{name:"age",label:"Select Age",isRequired:!0,items:[{label:"< 18",value:"< 18"},{label:"18 - 30",value:"18 - 30"},{label:"31 - 50",value:"31 - 50"},{label:"> 50",value:"> 50"}]}}]},{widths:"auto",items:[{type:ui_index__WEBPACK_IMPORTED_MODULE_3__.wH.COMBOBOX,rendererProps:{name:"favourite_food",label:"Favourite food",multiple:!0,isRequired:!0,items:[{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Dosa",value:"dosa"},{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Idly",value:"idly"},{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Parantha",value:"parantha"},{type:ui_elements_DropdownMenu__WEBPACK_IMPORTED_MODULE_1__.d.OPTION,label:"Khichdi",value:"khichdi"}]}}]}],schema:(0,yup__WEBPACK_IMPORTED_MODULE_4__.Ik)({first_name:(0,yup__WEBPACK_IMPORTED_MODULE_4__.Yj)().required("First Name is required"),last_name:(0,yup__WEBPACK_IMPORTED_MODULE_4__.Yj)().required("Last Name is required"),hobbies:(0,yup__WEBPACK_IMPORTED_MODULE_4__.YO)().min(1,"Select at least one hobby"),profession:(0,yup__WEBPACK_IMPORTED_MODULE_4__.Ik)().nullable().required("Select a profession"),consent:(0,yup__WEBPACK_IMPORTED_MODULE_4__.YO)().min(1,"Please agree to the terms and conditions"),age:(0,yup__WEBPACK_IMPORTED_MODULE_4__.Yj)().required("Select age").equals(["18 - 30","31 - 50","> 50"],"Age must be greater than 18"),favourite_food:(0,yup__WEBPACK_IMPORTED_MODULE_4__.YO)().min(1,"Select at least one favourite food")})},_useNSForm=(0,ui_index__WEBPACK_IMPORTED_MODULE_3__.lk)(_objectSpread(_objectSpread({},args),{},{formConfig,rowStyles:{padding:"8px"}})),formData=_useNSForm.formData,formRenderer=_useNSForm.formRenderer;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",gap:"12px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{flex:1,maxWidth:"800px",gap:"20px",display:"flex",flexDirection:"column"}},formRenderer),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"12px",border:"1px solid #ccc",borderRadius:"4px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Typography__WEBPACK_IMPORTED_MODULE_2__.Ay,{variant:"paragraph-md-p1"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,JSON.stringify(formData,null,2)))))}.bind({}),defaultArgs={formConfig:{fieldNames:[],initialState:{},rows:[],schema:void 0},rowStyles:{},whenToValidate:null,isMobileView:!1,shouldFocusOnFirstError:!0,shouldSubmitOnEnter:!0,shouldShowSubmitButton:!0,onSubmit:function onSubmit(){},submitButtonProps:{}};ExampleUseForm.args=_objectSpread({},defaultArgs);const __namedExportsOrder=["ExampleUseForm"];ExampleUseForm.parameters={...ExampleUseForm.parameters,docs:{...ExampleUseForm.parameters?.docs,source:{originalSource:"(args: NSUseFormProps) => {\n  const fieldNames: NSFieldName[] = ['first_name', 'last_name', 'hobbies', 'profession', 'consent', 'age', 'favourite_food'];\n  const formConfig: NSFormConfig = {\n    fieldNames,\n    initialState: {\n      first_name: '',\n      last_name: '',\n      hobbies: [],\n      profession: null,\n      consent: [],\n      age: null,\n      favourite_food: []\n    },\n    rows: [{\n      widths: '1fr 1fr',\n      items: [{\n        type: NSFormFieldType.TEXTFIELD,\n        rendererProps: {\n          name: 'first_name',\n          label: 'First Name',\n          placeholder: 'John',\n          isRequired: true\n        }\n      }, {\n        type: NSFormFieldType.TEXTFIELD,\n        rendererProps: {\n          name: 'last_name',\n          label: 'Last Name',\n          placeholder: 'Doe',\n          isRequired: true\n        }\n      }]\n    }, {\n      widths: '2fr 1fr',\n      items: [{\n        type: NSFormFieldType.DROPDOWN,\n        rendererProps: {\n          name: 'hobbies',\n          label: 'Select Hobbies',\n          multiple: true,\n          isRequired: true,\n          items: [{\n            type: BaseItemType.OPTION,\n            label: 'Reading',\n            value: 'reading'\n          }, {\n            type: BaseItemType.OPTION,\n            label: 'Writing',\n            value: 'writing'\n          }, {\n            type: BaseItemType.OPTION,\n            label: 'Drawing',\n            value: 'drawing'\n          }]\n        }\n      }, {\n        type: NSFormFieldType.DROPDOWN,\n        rendererProps: {\n          name: 'profession',\n          label: 'Select Profession',\n          multiple: false,\n          isRequired: true,\n          items: [{\n            type: BaseItemType.OPTION,\n            label: 'Developer',\n            value: 'developer'\n          }, {\n            type: BaseItemType.OPTION,\n            label: 'Designer',\n            value: 'designer'\n          }, {\n            type: BaseItemType.OPTION,\n            label: 'Manager',\n            value: 'manager'\n          }, {\n            type: BaseItemType.OPTION,\n            label: 'Tester',\n            value: 'tester'\n          }]\n        }\n      }]\n    }, {\n      widths: '1fr',\n      items: [{\n        type: NSFormFieldType.CHECKBOX_GROUP,\n        rendererProps: {\n          name: 'consent',\n          isRequired: true,\n          items: [{\n            label: 'I agree to the terms and conditions',\n            value: 'true'\n          }]\n        }\n      }]\n    }, {\n      widths: '1fr',\n      items: [{\n        type: NSFormFieldType.RADIOBUTTON_GROUP,\n        rendererProps: {\n          name: 'age',\n          label: 'Select Age',\n          isRequired: true,\n          items: [{\n            label: '< 18',\n            value: '< 18'\n          }, {\n            label: '18 - 30',\n            value: '18 - 30'\n          }, {\n            label: '31 - 50',\n            value: '31 - 50'\n          }, {\n            label: '> 50',\n            value: '> 50'\n          }]\n        }\n      }]\n    }, {\n      widths: 'auto',\n      items: [{\n        type: NSFormFieldType.COMBOBOX,\n        rendererProps: {\n          name: 'favourite_food',\n          label: 'Favourite food',\n          multiple: true,\n          isRequired: true,\n          items: [{\n            type: BaseItemType.OPTION,\n            label: 'Dosa',\n            value: 'dosa'\n          }, {\n            type: BaseItemType.OPTION,\n            label: 'Idly',\n            value: 'idly'\n          }, {\n            type: BaseItemType.OPTION,\n            label: 'Parantha',\n            value: 'parantha'\n          }, {\n            type: BaseItemType.OPTION,\n            label: 'Khichdi',\n            value: 'khichdi'\n          }]\n        }\n      }]\n    }],\n    schema: object({\n      first_name: string().required('First Name is required'),\n      last_name: string().required('Last Name is required'),\n      hobbies: array().min(1, 'Select at least one hobby'),\n      profession: object().nullable().required('Select a profession'),\n      consent: array().min(1, 'Please agree to the terms and conditions'),\n      age: string().required('Select age').equals(['18 - 30', '31 - 50', '> 50'], 'Age must be greater than 18'),\n      favourite_food: array().min(1, 'Select at least one favourite food')\n    })\n  };\n  const {\n    formData,\n    formRenderer\n  } = useNSForm({\n    ...args,\n    formConfig,\n    rowStyles: {\n      padding: '8px'\n    }\n  });\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n            <div style={{\n      flex: 1,\n      maxWidth: '800px',\n      gap: '20px',\n      display: 'flex',\n      flexDirection: 'column'\n    }}>\n                {formRenderer}\n            </div>\n            <div style={{\n      padding: '12px',\n      border: '1px solid #ccc',\n      borderRadius: '4px'\n    }}>\n                <Typography variant=\"paragraph-md-p1\">\n                    <pre>{JSON.stringify(formData, null, 2)}</pre>\n                </Typography>\n            </div>\n        </div>;\n}",...ExampleUseForm.parameters?.docs?.source}}}}}]);