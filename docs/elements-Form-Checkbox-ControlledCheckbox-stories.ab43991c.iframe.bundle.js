"use strict";(self.webpackChunk_newtonschool_grauity=self.webpackChunk_newtonschool_grauity||[]).push([[7289],{"./stories/elements/Form/Checkbox/ControlledCheckbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledCheckbox:()=>ControlledCheckbox,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),ui_elements_Form_Checkbox__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/elements/Form/Checkbox/index.ts"),ui_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/index.ts");function _toConsumableArray(r){return function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}(r)||function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||_unsupportedIterableToArray(r)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||_unsupportedIterableToArray(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}const __WEBPACK_DEFAULT_EXPORT__={title:"Elements/Form/Checkbox",component:ui_elements_Form_Checkbox__WEBPACK_IMPORTED_MODULE_1__.A,tags:["!autodocs"]};var ControlledCheckbox=function ControlledCheckbox(){var _useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),2),selectedValues=_useState2[0],setSelectedValues=_useState2[1],handleChange=function handleChange(event){var value=parseInt(event.target.value,10),newSelectedValues=selectedValues.includes(value)?selectedValues.filter((function(v){return v!==value})):[].concat(_toConsumableArray(selectedValues),[value]);setSelectedValues(newSelectedValues)};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_2__.y5.Table,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_2__.y5.TableHead,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_2__.y5.TableHeadingCell,{colSpan:2,align:"left"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:"space-between",gap:"8px"}},"What would you like to eat?",react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_2__.A8,{variant:"secondary",color:"neutral",size:"small",icon:"close-circle",onClick:function onClick(){return setSelectedValues([])}},"Clear")))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_2__.y5.TableBody,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_2__.y5.TableRow,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_2__.y5.TableDataCell,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_Checkbox__WEBPACK_IMPORTED_MODULE_1__.A,{name:"radio-1",value:1,label:"🍕 Pizza",isChecked:selectedValues.includes(1),onChange:handleChange}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_Checkbox__WEBPACK_IMPORTED_MODULE_1__.A,{name:"radio-1",value:2,label:"🍔 Burger",isChecked:selectedValues.includes(2),onChange:handleChange}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_Checkbox__WEBPACK_IMPORTED_MODULE_1__.A,{name:"radio-1",value:3,label:"🍟 Fries",isChecked:selectedValues.includes(3),onChange:handleChange})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_index__WEBPACK_IMPORTED_MODULE_2__.y5.TableDataCell,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_Checkbox__WEBPACK_IMPORTED_MODULE_1__.A,{name:"radio-2",value:1,label:"🍕 Pizza",isChecked:selectedValues.includes(1),onChange:handleChange}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_Checkbox__WEBPACK_IMPORTED_MODULE_1__.A,{name:"radio-2",value:2,label:"🍔 Burger",isChecked:selectedValues.includes(2),onChange:handleChange}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_Checkbox__WEBPACK_IMPORTED_MODULE_1__.A,{name:"radio-2",value:3,label:"🍟 Fries",isChecked:selectedValues.includes(3),onChange:handleChange})))))};const __namedExportsOrder=["ControlledCheckbox"];ControlledCheckbox.parameters={...ControlledCheckbox.parameters,docs:{...ControlledCheckbox.parameters?.docs,source:{originalSource:'() => {\n  const [selectedValues, setSelectedValues] = useState([]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10);\n    const newSelectedValues = selectedValues.includes(value) ? selectedValues.filter(v => v !== value) : [...selectedValues, value];\n    setSelectedValues(newSelectedValues);\n  };\n  return <NSTable.Table>\n            <NSTable.TableHead>\n                <NSTable.TableHeadingCell colSpan={2} align="left">\n                    <div style={{\n          display: \'flex\',\n          alignItems: \'center\',\n          justifyContent: \'space-between\',\n          gap: \'8px\'\n        }}>\n                        What would you like to eat?\n                        <NSButton variant="secondary" color="neutral" size="small" icon="close-circle" onClick={() => setSelectedValues([])}>\n                            Clear\n                        </NSButton>\n                    </div>\n                </NSTable.TableHeadingCell>\n            </NSTable.TableHead>\n            <NSTable.TableBody>\n                <NSTable.TableRow>\n                    <NSTable.TableDataCell>\n                        <Checkbox name="radio-1" value={1} label="🍕 Pizza" isChecked={selectedValues.includes(1)} onChange={handleChange} />\n                        <Checkbox name="radio-1" value={2} label="🍔 Burger" isChecked={selectedValues.includes(2)} onChange={handleChange} />\n                        <Checkbox name="radio-1" value={3} label="🍟 Fries" isChecked={selectedValues.includes(3)} onChange={handleChange} />\n                    </NSTable.TableDataCell>\n                    <NSTable.TableDataCell>\n                        <Checkbox name="radio-2" value={1} label="🍕 Pizza" isChecked={selectedValues.includes(1)} onChange={handleChange} />\n                        <Checkbox name="radio-2" value={2} label="🍔 Burger" isChecked={selectedValues.includes(2)} onChange={handleChange} />\n                        <Checkbox name="radio-2" value={3} label="🍟 Fries" isChecked={selectedValues.includes(3)} onChange={handleChange} />\n                    </NSTable.TableDataCell>\n                </NSTable.TableRow>\n            </NSTable.TableBody>\n        </NSTable.Table>;\n}',...ControlledCheckbox.parameters?.docs?.source}}}}}]);