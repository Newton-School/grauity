"use strict";(self.webpackChunk_newtonschool_grauity=self.webpackChunk_newtonschool_grauity||[]).push([[8966],{"./stories/elements/Form/RadioButton/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Component:()=>Component,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),ui_elements_Form_RadioButton__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/elements/Form/RadioButton/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}const __WEBPACK_DEFAULT_EXPORT__={title:"Elements/Form/RadioButton",component:ui_elements_Form_RadioButton__WEBPACK_IMPORTED_MODULE_1__.A};var Component=function Template(args){var _React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_0__.useState(null),2),checkedValue=_React$useState2[0],setCheckedValue=_React$useState2[1],handleChange=function handleChange(event){setCheckedValue(parseInt(event.target.value,10))};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_RadioButton__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{value:1,label:"Value 1",checked:1===checkedValue,onChange:handleChange})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_RadioButton__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{value:2,label:"Value 2",checked:2===checkedValue,onChange:handleChange})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Form_RadioButton__WEBPACK_IMPORTED_MODULE_1__.A,_extends({},args,{value:3,label:"Value 3",checked:3===checkedValue,onChange:handleChange})))}.bind({});Component.args={name:"radio",value:1,label:"Radio button",isRequired:!1,size:"medium",state:"default",helpMessage:"",errorMessage:"",onChange:function onChange(){},checked:!1,isDisabled:!1,className:null};const __namedExportsOrder=["Component"];Component.parameters={...Component.parameters,docs:{...Component.parameters?.docs,source:{originalSource:'(args: RadioButtonProps) => {\n  const [checkedValue, setCheckedValue] = React.useState<number>(null);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCheckedValue(parseInt(event.target.value, 10));\n  };\n  return <>\n            <RadioButton {...args} value={1} label="Value 1" checked={checkedValue === 1} onChange={handleChange} />\n            <RadioButton {...args} value={2} label="Value 2" checked={checkedValue === 2} onChange={handleChange} />\n            <RadioButton {...args} value={3} label="Value 3" checked={checkedValue === 3} onChange={handleChange} />\n        </>;\n}',...Component.parameters?.docs?.source}}}}}]);