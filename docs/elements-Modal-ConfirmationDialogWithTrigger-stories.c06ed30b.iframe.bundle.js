"use strict";(self.webpackChunk_newtonschool_grauity=self.webpackChunk_newtonschool_grauity||[]).push([[398],{"./stories/elements/Modal/ConfirmationDialogWithTrigger.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Template:()=>Template,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),ui_elements_Button__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/elements/Button/index.ts"),ui_elements_Modal__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/elements/Modal/index.ts");function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}const __WEBPACK_DEFAULT_EXPORT__={title:"Elements/ConfirmationDialog/TemplateWithTrigger",component:ui_elements_Modal__WEBPACK_IMPORTED_MODULE_2__.KK,tags:["!autodocs"]};var defaultArgs={banner:null,title:"Are you sure?",description:"You will need to sign in again to use the platform.",body:null,onConfirm:function onConfirm(){},onCancel:function onCancel(){},confirmText:"Sign out",cancelText:"Stay Signed in",confirmButtonVariant:"success",cancelButtonVariant:"danger",showCloseButton:!1,hideOnClickAway:!1,blurBackground:!1,mobileBottomFullWidth:!1},Template=function Template(){var args=arguments.length>0&&void 0!==arguments[0]?arguments[0]:defaultArgs,_useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),2),isOpen=_useState2[0],setIsOpen=_useState2[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Button__WEBPACK_IMPORTED_MODULE_1__.Ay,{onClick:function onClick(){return setIsOpen(!0)},variant:"danger",icon:"signout"},"Sign out"),isOpen&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(ui_elements_Modal__WEBPACK_IMPORTED_MODULE_2__.KK,{banner:null==args?void 0:args.banner,title:null==args?void 0:args.title,description:null==args?void 0:args.description,body:null==args?void 0:args.body,onConfirm:function onConfirm(){setIsOpen(!1),null==args||args.onConfirm()},onCancel:function onCancel(){setIsOpen(!1),null==args||args.onCancel()},confirmText:null==args?void 0:args.confirmText,cancelText:null==args?void 0:args.cancelText,confirmButtonVariant:null==args?void 0:args.confirmButtonVariant,cancelButtonVariant:null==args?void 0:args.cancelButtonVariant,showCloseButton:null==args?void 0:args.showCloseButton,hideOnClickAway:null==args?void 0:args.hideOnClickAway,blurBackground:null==args?void 0:args.blurBackground}))};const __namedExportsOrder=["Template"];Template.parameters={...Template.parameters,docs:{...Template.parameters?.docs,source:{originalSource:'(args: ConfirmationDialogProps = defaultArgs) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return <div>\n            <Button onClick={() => setIsOpen(true)} variant="danger" icon="signout">\n                Sign out\n            </Button>\n            {isOpen && <ConfirmationDialog banner={args?.banner} title={args?.title} description={args?.description} body={args?.body} onConfirm={() => {\n      setIsOpen(false);\n      args?.onConfirm();\n    }} onCancel={() => {\n      setIsOpen(false);\n      args?.onCancel();\n    }} confirmText={args?.confirmText} cancelText={args?.cancelText} confirmButtonVariant={args?.confirmButtonVariant} cancelButtonVariant={args?.cancelButtonVariant} showCloseButton={args?.showCloseButton} hideOnClickAway={args?.hideOnClickAway} blurBackground={args?.blurBackground} />}\n        </div>;\n}',...Template.parameters?.docs?.source}}};try{Template.displayName="Template",Template.__docgenInfo={description:"",displayName:"Template",props:{cancelText:{defaultValue:null,description:"Text for the cancel button",name:"cancelText",required:!1,type:{name:"string"}},confirmText:{defaultValue:null,description:"Text for the confirm button",name:"confirmText",required:!1,type:{name:"string"}},onCancel:{defaultValue:null,description:"Callback function to be called when the cancel button is clicked",name:"onCancel",required:!0,type:{name:"() => void"}},onConfirm:{defaultValue:null,description:"Callback function to be called when the confirm button is clicked",name:"onConfirm",required:!0,type:{name:"() => void"}},banner:{defaultValue:null,description:"Banner for the modal, can be a valid React node",name:"banner",required:!1,type:{name:"ReactNode"}},title:{defaultValue:null,description:"Title for the modal, can be a valid React node",name:"title",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"Description for the modal, can be a string",name:"description",required:!1,type:{name:"string"}},body:{defaultValue:null,description:"Body for the modal, can be a valid React node",name:"body",required:!1,type:{name:"ReactNode"}},cancelButtonVariant:{defaultValue:null,description:"Variant for the cancel button",name:"cancelButtonVariant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"primary-outlined"'},{value:'"secondary-outlined"'},{value:'"tertiary-outlined"'},{value:'"success-outlined"'},{value:'"danger-outlined"'},{value:'"warning-outlined"'}]}},confirmButtonVariant:{defaultValue:null,description:"Variant for the confirm button",name:"confirmButtonVariant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"success"'},{value:'"danger"'},{value:'"warning"'},{value:'"primary-outlined"'},{value:'"secondary-outlined"'},{value:'"tertiary-outlined"'},{value:'"success-outlined"'},{value:'"danger-outlined"'},{value:'"warning-outlined"'}]}},showCloseButton:{defaultValue:null,description:"Determines if the close button should be shown\nAvailable choices: `true`, `false`\n\nDefault: `false`",name:"showCloseButton",required:!1,type:{name:"boolean"}},hideOnClickAway:{defaultValue:null,description:"Determines if the modal should hide on click away\nAvailable choices: `true`, `false`\n\nDefault: `false`",name:"hideOnClickAway",required:!1,type:{name:"boolean"}},blurBackground:{defaultValue:null,description:"Determines if the modal should blur the background\nAvailable choices: `true`, `false`\n\nDefault: `false`",name:"blurBackground",required:!1,type:{name:"boolean"}},mobileBottomFullWidth:{defaultValue:null,description:"Determines if the modal should be at bottom with full width on mobile\nAvailable choices: `true`, `false`\n\nDefault: `false`",name:"mobileBottomFullWidth",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/elements/Modal/ConfirmationDialogWithTrigger.stories.tsx#Template"]={docgenInfo:Template.__docgenInfo,name:"Template",path:"stories/elements/Modal/ConfirmationDialogWithTrigger.stories.tsx#Template"})}catch(__react_docgen_typescript_loader_error){}}}]);